[project]
name = "drf-tweaks"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "asgiref==3.9.1",
    "certifi==2025.8.3",
    "charset-normalizer==3.4.3",
    "coreapi==2.3.3",
    "coreschema==0.0.4",
    "coverage==7.10.3",
    "django==5.2.5",
    "django-filter==25.1",
    "django-rest-swagger==2.2.0",
    "djangorestframework==3.16.1",
    "idna==3.10",
    "iniconfig==2.1.0",
    "itypes==1.2.0",
    "jinja2==3.1.6",
    "openapi-codec==1.3.2",
    "packaging==25.0",
    "pluggy==1.6.0",
    "requests==2.32.4",
    "simplejson==3.20.1",
    "sqlparse==0.5.3",
    "uritemplate==4.2.0",
    "urllib3==2.5.0",
]

[dependency-groups]
dev = [
    "click==8.2.1",
    "black==25.1.0",
    "execnet==2.1.1",
    "flake8==7.3.0",
    "isort==6.0.1",
    "markupsafe==3.0.2",
    "mccabe==0.7.0",
    "mypy-extensions==1.1.0",
    "pathspec==0.12.1",
    "platformdirs==4.3.8",
    "pre-commit>=4.3.0",
    "pycodestyle==2.14.0",
    "pyflakes==3.4.0",
    "pygments==2.19.2",
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
    "pytest-django==4.11.1",
    "pytest-xdist==3.8.0",
    "pyupgrade==3.20.0",
    "pyupgrade-directories==0.3.0",
    "pep8==1.7.1",
    "ruff==0.12.8",
    "tokenize-rt==6.2.0",
]

[tool.ruff]
# Enable rules.
select = ["E", "F", "W", "TID", "ISC", "RET", "PERF", "C4", "SIM", "UP009", "D417"]

# Allow autofix rules.
fixable = [
  "E",
  "F",
  "W",
  "UP009",
  "C408",
  "C416",
  "C417",
  "SIM105",
  "SIM108",
  "SIM110",
  "SIM118",
  "SIM210",
  "SIM300"
]

# Ignore rules.
ignore = ["TID252",]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
    "manage.py"
]

target-version = "py311"

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.black]
target-version = ["py311"]
extend-exclude = """
(
  .direnv
  | .eggs
  | .git
  | .hg
  | .mypy_cache
  | .nox
  | .pants.d
  | .pytype
  | .ruff_cache
  | .svn
  | .tox
  | .venv
  | __pypackages__
  | _build
  | buck-out
  | build
  | dist
  | node_modules
  | venv
  | migrations
)
"""

[tool.isort]
profile = "black"
py_version = 311
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
lines_between_types = 1
known_django = ["django"]
known_third_party = ["rest_framework", "rest_framework_simplejwt", "django_filters", "django_extensions", "django_celery_beat", "django_celery_results", "django_cors_headers"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "PANDAS", "COMMONS", "FIRSTPARTY", "LOCALFOLDER"]

[tool.ruff.lint.isort]
lines-between-types = 1
combine-as-imports = true
known-third-party = ["rest_framework", "rest_framework_simplejwt", "django_filters", "django_extensions", "django_celery_beat", "django_celery_results", "django_cors_headers", "azure"]
no-lines-before = ["future", "standard-library"]
section-order = [
  "future",
  "standard-library",
  "django",
  "third-party",
  "pandas",
  "commons",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.isort.sections]
django = ["django"]
pandas = ["pandas", "numpy"]
